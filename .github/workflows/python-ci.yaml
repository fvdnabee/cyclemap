# This workflow runs linting
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python CI

on:
  push:
    branches: [ master ]  # on push to master branch
  pull_request:  # on pull requests for any branch

jobs:
  pylint:
    runs-on: ubuntu-latest  # use github runner
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-dev.txt') }}
    - name: Install dependencies
      run: |
        pip install --upgrade --upgrade-strategy eager -r requirements-dev.txt -e .
    - name: Lint with pylint
      run: |
        pylint --rcfile .pylintrc cyclemap

  build-publish:
    runs-on: ubuntu-latest  # use github runner
    if: github.ref == 'refs/heads/master'  # only run for pushes on master
    needs: pylint  # linting should be succesfull
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Fetch all history for all tags and branches, needed for make version

    - name: Build wheel and output version
      id: build-output-version
      run: |
        make version
        make wheel
        echo "::set-output name=ARTIFACT_NAME::$(find dist/ -name '*.whl' -exec basename {} \;)"

    - name: Upload wheel
      uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.build-output-version.outputs.ARTIFACT_NAME }}
        path: dist/cyclemap-*.whl

    - name: Login to AWS Public ECR
      uses: docker/login-action@v1
      with:
        registry: public.ecr.aws
        username: ${{ secrets.AWS_ACCESS_KEY_ID }}
        password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      env:
        # ECR Public is only available in us-east-1 region, see https://docs.aws.amazon.com/AmazonECR/latest/public/getting-started-cli.html#cli-authenticate-registry
        AWS_REGION: us-east-1

    - name: Build and publish container
      run: |
        make build-from-ci
        make publish-latest
        make publish-version
        export ECR_REGISTRY="public.ecr.aws/o0s8a4l2"
        export ECR_REPOSITORY=cyclemap
        export IMAGE_TAG=$(make docker-tag)
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
